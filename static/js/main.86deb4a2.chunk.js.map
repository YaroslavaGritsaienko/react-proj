{"version":3,"sources":["components/ToDoItem.js","components/ToDoForm.js","components/ToDo.js","index.js"],"names":["ToDoItem","props","item","onCheck","onRemove","className","style","textDecoration","checked","color","onChange","id","display","flexDirection","justifyContent","width","name","background","date","desc","danger","onClick","e","preventDefault","xmlns","fill","viewBox","height","d","ToDoForm","onSubmit","onRemoveChecked","Form","useForm","form","checkTitle","title","toUpperCase","match","checkItems","item1","item2","length","layout","onFinish","values","resetFields","Item","placeholder","htmlType","type","ToDo","useState","getDate","todos","setTodos","idCount","setIdCount","index","findIndex","todo","splice","Date","validateDate","dateArr","toString","split","console","log","getMonth","reduce","count","filter","map","renderTodoItems","Header","Layout","Footer","Content","App","span","offset","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86deb4a2.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Button, Checkbox} from 'antd';\r\n\r\nexport const ToDoItem = (props) => {\r\n    const {item, onCheck, onRemove} = props;\r\n    const onRemoveItem = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (onRemove) {\r\n            onRemove(item.id);\r\n        }\r\n    }\r\n\r\n    const onCheckItem = () => {\r\n        if (onCheck) {\r\n            onCheck(item.id);\r\n        }\r\n    }\r\n\r\n\r\n    const getItemInfo = () => {\r\n        return <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", width: \"400px\"}}>\r\n            <span>{item.name}</span> <span style={{background: \"whitesmoke\"}}>{item.date}</span>\r\n            <span>{item.desc}</span></div>\r\n    }\r\n\r\n\r\n    return (\r\n        <li className=\"todo-item\"\r\n            key={item.id}\r\n            style={{\r\n                textDecoration: item.checked ? 'line-through' : 'none',\r\n\r\n            }}>\r\n            <Checkbox\r\n                style={{color: item.checked ? \"darkred\" : \"black\"}}\r\n                checked={item.checked}\r\n                onChange={onCheckItem}\r\n            >{getItemInfo()}</Checkbox>\r\n            <Button danger onClick={onRemoveItem}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\" viewBox=\"0 0 30 30\" width=\"20px\" height=\"20px\">\r\n                    <path\r\n                        d=\"M 13 3 A 1.0001 1.0001 0 0 0 11.986328 4 L 6 4 A 1.0001 1.0001 0 1 0 6 6 L 24 6 A 1.0001 1.0001 0 1 0 24 4 L 18.013672 4 A 1.0001 1.0001 0 0 0 17 3 L 13 3 z M 6 8 L 6 24 C 6 25.105 6.895 26 8 26 L 22 26 C 23.105 26 24 25.105 24 24 L 24 8 L 6 8 z\"/>\r\n                </svg>\r\n            </Button>\r\n        </li>\r\n    )\r\n}","import React from 'react';\r\nimport {Form, Input, Button} from 'antd';\r\n\r\n//\r\nexport const ToDoForm = (props) => {\r\n    const {onSubmit, onRemoveChecked} = props;\r\n    const [form] = Form.useForm();\r\n    const onFinish = (values) => {\r\n        if (onSubmit && checkItems(values.desc, values.title) && checkTitle(values.title)) {\r\n            onSubmit(values.title, values.desc);\r\n            form.resetFields();\r\n        }\r\n        form.resetFields();\r\n    }\r\n\r\n    const checkTitle = (title) => {\r\n        if (title[0] === title[0].toUpperCase() && title[0].match(/[a-z]/i)) {\r\n            return true\r\n        }\r\n        return false;\r\n    };\r\n    const checkItems = (item1, item2) => {\r\n        if (item1.length >= 3 && item2.length >= 3) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form className=\"todo-form\" form={form} layout={'inline'} onFinish={onFinish}>\r\n            <Form.Item name=\"title\" className=\"todo-form-input\">\r\n                <Input placeholder={'New todo`s title'}/>\r\n            </Form.Item>\r\n            <Form.Item name=\"desc\" className=\"todo-form-input\">\r\n                <Input placeholder={'New todo`s desc'}/>\r\n            </Form.Item>\r\n            <Form.Item className=\"todo-form-actions\">\r\n                <Button htmlType=\"submit\" type=\"primary\">Add</Button>\r\n            </Form.Item>\r\n            <Form.Item className=\"todo-form-actions\">\r\n                <Button danger htmlType=\"submit\" type=\"primary\" onClick={onRemoveChecked}>Remove checked</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport {Card, Divider} from 'antd';\r\nimport {ToDoItem} from './ToDoItem';\r\nimport {ToDoForm} from './ToDoForm';\r\n\r\nexport const ToDo = () => {\r\n    const [todos, setTodos] = useState([\r\n        {id: 1, name: 'some', desc: \"desc\", date: getDate(), checked: false},\r\n        {id: 2, name: 'another one', desc: \"desc\", date: getDate(), checked: false}\r\n    ]);\r\n    const [idCount, setIdCount] = useState(10);\r\n\r\n    const renderTodoItems = (todos) => {\r\n        return (\r\n            <ul className=\"todo-list\">\r\n                {todos.map(todo => <ToDoItem\r\n                    key={todo.id}\r\n                    item={todo}\r\n                    onRemove={onRemove}\r\n                    onCheck={onCheck}\r\n                />)}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const onRemoveChecked = () => {\r\n        setTodos(todos.filter(item => !item.checked))\r\n    }\r\n\r\n    const onRemove = (id) => {\r\n        const index = todos.findIndex(todo => todo.id === id);\r\n\r\n        if (index !== -1) {\r\n            todos.splice(index, 1);\r\n            setTodos([...todos]);\r\n        }\r\n    }\r\n\r\n    const onCheck = (id) => {\r\n        const index = todos.findIndex(todo => todo.id === id);\r\n\r\n        if (index !== -1) {\r\n            const todo = todos[index];\r\n\r\n            todo.checked = !todo.checked;\r\n            todos.splice(index, 1, todo);\r\n\r\n            setTodos([...todos]);\r\n        }\r\n    }\r\n\r\n    function getDate() {\r\n        let date = new Date()\r\n        function validateDate(date) {\r\n            if(date<10) {\r\n                return `${date}`\r\n            }else {\r\n                return  date;\r\n            }\r\n        }\r\n\r\n        const dateArr = date.toString().split(' ')\r\n        console.log(dateArr)\r\n        return` ${validateDate(dateArr[2])}.${validateDate(date.getMonth() + 1)}.${dateArr[3]} - ${dateArr[4]}`\r\n    }\r\n\r\n\r\n    const onSubmit = (name, desc) => {\r\n        const todo = {\r\n            name,\r\n            desc,\r\n            date: getDate(),\r\n            id: idCount,\r\n            checked: false\r\n        };\r\n\r\n        setTodos([...todos, todo]);\r\n        setIdCount(idCount + 1);\r\n    }\r\n\r\n    const checkedItems = () => {\r\n        return todos.reduce((count, item) => {\r\n            if(item.checked)\r\n                count++ \r\n        return count;\r\n        }, 0)\r\n    }\r\n\r\n    return (\r\n        <Card title={'My todos'} className=\"todo-card\">\r\n            {\"Checked:\" + checkedItems() || 0}\r\n            <ToDoForm onSubmit={onSubmit} onRemoveChecked={onRemoveChecked}/>\r\n            <Divider/>\r\n            {renderTodoItems(todos)}\r\n        </Card>\r\n    );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Layout, Row, Col} from 'antd';\r\n\r\nimport {ToDo} from './components/ToDo';\r\n\r\nimport 'antd/dist/antd.css'\r\nimport './index.css';\r\n\r\nconst {Header, Footer, Content} = Layout;\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <Layout>\r\n            <Header></Header>\r\n            <Content>\r\n                <Row>\r\n                    <Col span={12} offset={6} className=\"todo\">\r\n                        <ToDo/>\r\n                    </Col>\r\n                </Row>\r\n            </Content>\r\n            <Footer></Footer>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}